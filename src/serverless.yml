org: lucasnad27
app: stock-universe
service: universe-for-the-day

frameworkVersion: '2'

plugins:
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: true

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221

functions:
  getStockUniverse:
    handler: handler.get_stock_universe
    environment:
      S3_BUCKET: ${param:S3_BUCKET}
      CHUNK_SIZE: ${param:CHUNK_SIZE}
      TD_MAX_CONCURRENT_REQUESTS: ${param:TD_MAX_CONCURRENT_REQUESTS}
    events:
      # Invoke Lambda function every day
      - schedule: cron(15 22 * * ? *)
  processEodQuotes:
    handler: handler.process_eod_quotes
    timeout: 240
    maximumRetryAttempts: 1
    environment:
      TD_API_KEY: ${param:TD_API_KEY}
      TD_TOKEN_SECRET_NAME: ${param:TD_TOKEN_SECRET_NAME}
      TD_MAX_CONCURRENT_REQUESTS: ${param:TD_MAX_CONCURRENT_REQUESTS}
      CHUNK_SIZE: ${param:CHUNK_SIZE}
    events:
      - s3:
          bucket: ${param:S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: incoming/quotes
          existing: true
  processEodFundamentals:
    handler: handler.process_eod_fundamentals
    timeout: 240
    maximumRetryAttempts: 1
    environment:
      TD_API_KEY: ${param:TD_API_KEY}
      TD_TOKEN_SECRET_NAME: ${param:TD_TOKEN_SECRET_NAME}
      TD_MAX_CONCURRENT_REQUESTS: ${param:TD_MAX_CONCURRENT_REQUESTS}
      CHUNK_SIZE: ${param:CHUNK_SIZE}
    events:
      - s3:
          bucket: ${param:S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: incoming/fundamentals
          existing: true
